$comment
	File created using the following command:
		vcd file MIPS32_in_VHDL.msim.vcd -direction
$end
$date
	Sat Dec 30 11:40:03 2023
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module control_unit_block_diagram_vhd_vec_tst $end
$var wire 1 ! ALUop [1] $end
$var wire 1 " ALUop [0] $end
$var wire 1 # ALUSrc $end
$var wire 1 $ Branch $end
$var wire 1 % clock $end
$var wire 1 & MemRead $end
$var wire 1 ' MemtoReg $end
$var wire 1 ( MemWrite $end
$var wire 1 ) Opcode [5] $end
$var wire 1 * Opcode [4] $end
$var wire 1 + Opcode [3] $end
$var wire 1 , Opcode [2] $end
$var wire 1 - Opcode [1] $end
$var wire 1 . Opcode [0] $end
$var wire 1 / RegDst $end
$var wire 1 0 RegWrite $end
$var wire 1 1 reset $end

$scope module i1 $end
$var wire 1 2 gnd $end
$var wire 1 3 vcc $end
$var wire 1 4 unknown $end
$var wire 1 5 devoe $end
$var wire 1 6 devclrn $end
$var wire 1 7 devpor $end
$var wire 1 8 ww_devoe $end
$var wire 1 9 ww_devclrn $end
$var wire 1 : ww_devpor $end
$var wire 1 ; ww_RegDst $end
$var wire 1 < ww_clock $end
$var wire 1 = ww_reset $end
$var wire 1 > ww_Opcode [5] $end
$var wire 1 ? ww_Opcode [4] $end
$var wire 1 @ ww_Opcode [3] $end
$var wire 1 A ww_Opcode [2] $end
$var wire 1 B ww_Opcode [1] $end
$var wire 1 C ww_Opcode [0] $end
$var wire 1 D ww_ALUSrc $end
$var wire 1 E ww_MemtoReg $end
$var wire 1 F ww_RegWrite $end
$var wire 1 G ww_MemRead $end
$var wire 1 H ww_MemWrite $end
$var wire 1 I ww_Branch $end
$var wire 1 J ww_ALUop [1] $end
$var wire 1 K ww_ALUop [0] $end
$var wire 1 L \clock~input_o\ $end
$var wire 1 M \reset~input_o\ $end
$var wire 1 N \~QUARTUS_CREATED_GND~I_combout\ $end
$var wire 1 O \Opcode[1]~input_o\ $end
$var wire 1 P \Opcode[0]~input_o\ $end
$var wire 1 Q \Opcode[2]~input_o\ $end
$var wire 1 R \Opcode[5]~input_o\ $end
$var wire 1 S \Opcode[3]~input_o\ $end
$var wire 1 T \Opcode[4]~input_o\ $end
$var wire 1 U \inst|Equal0~0_combout\ $end
$var wire 1 V \inst|Equal1~0_combout\ $end
$var wire 1 W \inst|RegWrite~combout\ $end
$var wire 1 X \inst|Equal2~0_combout\ $end
$var wire 1 Y \inst|Equal3~0_combout\ $end
$var wire 1 Z \ALT_INV_Opcode[0]~input_o\ $end
$var wire 1 [ \ALT_INV_Opcode[1]~input_o\ $end
$var wire 1 \ \ALT_INV_Opcode[3]~input_o\ $end
$var wire 1 ] \ALT_INV_Opcode[4]~input_o\ $end
$var wire 1 ^ \ALT_INV_Opcode[5]~input_o\ $end
$var wire 1 _ \ALT_INV_Opcode[2]~input_o\ $end
$var wire 1 ` \inst|ALT_INV_Equal0~0_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0#
0$
0%
0&
0'
0(
1/
10
01
02
13
x4
15
16
17
18
19
1:
1;
0<
0=
0D
0E
1F
0G
0H
0I
0L
0M
xN
0O
0P
0Q
0R
0S
0T
1U
0V
1W
0X
0Y
1Z
1[
1\
1]
1^
1_
0`
0)
0*
0+
0,
0-
0.
0>
0?
0@
0A
0B
0C
1J
0K
1!
0"
$end
#30000
1%
1<
1L
#60000
0%
1)
1-
1.
0<
1C
1B
1>
1R
1O
1P
0L
0Z
0[
0^
0U
1V
1`
1E
1G
0;
0J
1D
1'
1&
0/
0!
1#
#90000
1%
1<
1L
#100000
11
1+
1=
1@
1S
1M
0\
0V
0W
1X
1H
0F
0E
0G
1(
00
0'
0&
#120000
0%
0<
0L
#140000
0+
0)
0-
0.
0C
0B
0@
0>
0R
0S
0O
0P
1Z
1[
1\
1^
1U
1W
0X
0`
0H
1F
1;
1J
0D
0(
10
1/
1!
0#
#150000
1%
1<
1L
#170000
1,
1A
1Q
0_
0U
0W
1Y
1`
1I
1K
0F
0;
0J
1D
1$
1"
0!
00
0/
1#
#180000
0%
0<
0L
#200000
01
0=
0M
#210000
1%
1<
1L
#240000
0%
0,
0<
0A
0Q
0L
1_
1U
1W
0Y
0`
0I
0K
1F
1;
1J
0D
0$
0"
1!
10
1/
0#
#260000
1-
1B
1O
0[
0U
0W
1`
0F
0;
0J
1D
00
0/
0!
1#
#270000
1%
1<
1L
#300000
0%
11
0<
1=
1M
0L
#330000
1%
0-
1<
0B
0O
1L
1[
1U
1W
0`
1F
1;
1J
0D
10
1/
1!
0#
#360000
0%
0<
0L
#370000
1-
1,
1+
1)
1.
1*
1C
1B
1A
1@
1?
1>
1R
1T
1S
1Q
1O
1P
0Z
0[
0_
0\
0]
0^
0U
0W
1`
0F
0;
0J
1D
00
0/
0!
1#
#390000
1%
1<
1L
#400000
01
0=
0M
#420000
0%
0<
0L
#450000
1%
1<
1L
#480000
0%
0<
0L
#500000
11
1=
1M
#510000
1%
1<
1L
#530000
0-
0,
0+
0)
0.
0*
0C
0B
0A
0@
0?
0>
0R
0T
0S
0Q
0O
0P
1Z
1[
1_
1\
1]
1^
1U
1W
0`
1F
1;
1J
0D
10
1/
1!
0#
#540000
0%
0<
0L
#570000
1%
1<
1L
#600000
0%
01
0<
0=
0M
0L
#630000
1%
1<
1L
#660000
0%
0<
0L
#690000
1%
1<
1L
#700000
11
1=
1M
#720000
0%
0<
0L
#750000
1%
1<
1L
#780000
0%
0<
0L
#800000
01
0=
0M
#810000
1%
1<
1L
#840000
0%
0<
0L
#870000
1%
1<
1L
#900000
0%
11
0<
1=
1M
0L
#930000
1%
1<
1L
#960000
0%
0<
0L
#990000
1%
1<
1L
#1000000
