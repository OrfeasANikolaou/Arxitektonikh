$comment
	File created using the following command:
		vcd file MIPS32_in_VHDL.msim.vcd -direction
$end
$date
	Tue Jan 16 00:47:10 2024
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module alu_block_diagram_vhd_vec_tst $end
$var wire 1 ! Add_Result [7] $end
$var wire 1 " Add_Result [6] $end
$var wire 1 # Add_Result [5] $end
$var wire 1 $ Add_Result [4] $end
$var wire 1 % Add_Result [3] $end
$var wire 1 & Add_Result [2] $end
$var wire 1 ' Add_Result [1] $end
$var wire 1 ( Add_Result [0] $end
$var wire 1 ) ALU_Result [31] $end
$var wire 1 * ALU_Result [30] $end
$var wire 1 + ALU_Result [29] $end
$var wire 1 , ALU_Result [28] $end
$var wire 1 - ALU_Result [27] $end
$var wire 1 . ALU_Result [26] $end
$var wire 1 / ALU_Result [25] $end
$var wire 1 0 ALU_Result [24] $end
$var wire 1 1 ALU_Result [23] $end
$var wire 1 2 ALU_Result [22] $end
$var wire 1 3 ALU_Result [21] $end
$var wire 1 4 ALU_Result [20] $end
$var wire 1 5 ALU_Result [19] $end
$var wire 1 6 ALU_Result [18] $end
$var wire 1 7 ALU_Result [17] $end
$var wire 1 8 ALU_Result [16] $end
$var wire 1 9 ALU_Result [15] $end
$var wire 1 : ALU_Result [14] $end
$var wire 1 ; ALU_Result [13] $end
$var wire 1 < ALU_Result [12] $end
$var wire 1 = ALU_Result [11] $end
$var wire 1 > ALU_Result [10] $end
$var wire 1 ? ALU_Result [9] $end
$var wire 1 @ ALU_Result [8] $end
$var wire 1 A ALU_Result [7] $end
$var wire 1 B ALU_Result [6] $end
$var wire 1 C ALU_Result [5] $end
$var wire 1 D ALU_Result [4] $end
$var wire 1 E ALU_Result [3] $end
$var wire 1 F ALU_Result [2] $end
$var wire 1 G ALU_Result [1] $end
$var wire 1 H ALU_Result [0] $end
$var wire 1 I ALUOp [1] $end
$var wire 1 J ALUOp [0] $end
$var wire 1 K ALUSrc $end
$var wire 1 L clock $end
$var wire 1 M Function_opcodes [5] $end
$var wire 1 N Function_opcodes [4] $end
$var wire 1 O Function_opcodes [3] $end
$var wire 1 P Function_opcodes [2] $end
$var wire 1 Q Function_opcodes [1] $end
$var wire 1 R Function_opcodes [0] $end
$var wire 1 S PC_plus_4 [7] $end
$var wire 1 T PC_plus_4 [6] $end
$var wire 1 U PC_plus_4 [5] $end
$var wire 1 V PC_plus_4 [4] $end
$var wire 1 W PC_plus_4 [3] $end
$var wire 1 X PC_plus_4 [2] $end
$var wire 1 Y PC_plus_4 [1] $end
$var wire 1 Z PC_plus_4 [0] $end
$var wire 1 [ Read_data_1 [31] $end
$var wire 1 \ Read_data_1 [30] $end
$var wire 1 ] Read_data_1 [29] $end
$var wire 1 ^ Read_data_1 [28] $end
$var wire 1 _ Read_data_1 [27] $end
$var wire 1 ` Read_data_1 [26] $end
$var wire 1 a Read_data_1 [25] $end
$var wire 1 b Read_data_1 [24] $end
$var wire 1 c Read_data_1 [23] $end
$var wire 1 d Read_data_1 [22] $end
$var wire 1 e Read_data_1 [21] $end
$var wire 1 f Read_data_1 [20] $end
$var wire 1 g Read_data_1 [19] $end
$var wire 1 h Read_data_1 [18] $end
$var wire 1 i Read_data_1 [17] $end
$var wire 1 j Read_data_1 [16] $end
$var wire 1 k Read_data_1 [15] $end
$var wire 1 l Read_data_1 [14] $end
$var wire 1 m Read_data_1 [13] $end
$var wire 1 n Read_data_1 [12] $end
$var wire 1 o Read_data_1 [11] $end
$var wire 1 p Read_data_1 [10] $end
$var wire 1 q Read_data_1 [9] $end
$var wire 1 r Read_data_1 [8] $end
$var wire 1 s Read_data_1 [7] $end
$var wire 1 t Read_data_1 [6] $end
$var wire 1 u Read_data_1 [5] $end
$var wire 1 v Read_data_1 [4] $end
$var wire 1 w Read_data_1 [3] $end
$var wire 1 x Read_data_1 [2] $end
$var wire 1 y Read_data_1 [1] $end
$var wire 1 z Read_data_1 [0] $end
$var wire 1 { Read_data_2 [31] $end
$var wire 1 | Read_data_2 [30] $end
$var wire 1 } Read_data_2 [29] $end
$var wire 1 ~ Read_data_2 [28] $end
$var wire 1 !! Read_data_2 [27] $end
$var wire 1 "! Read_data_2 [26] $end
$var wire 1 #! Read_data_2 [25] $end
$var wire 1 $! Read_data_2 [24] $end
$var wire 1 %! Read_data_2 [23] $end
$var wire 1 &! Read_data_2 [22] $end
$var wire 1 '! Read_data_2 [21] $end
$var wire 1 (! Read_data_2 [20] $end
$var wire 1 )! Read_data_2 [19] $end
$var wire 1 *! Read_data_2 [18] $end
$var wire 1 +! Read_data_2 [17] $end
$var wire 1 ,! Read_data_2 [16] $end
$var wire 1 -! Read_data_2 [15] $end
$var wire 1 .! Read_data_2 [14] $end
$var wire 1 /! Read_data_2 [13] $end
$var wire 1 0! Read_data_2 [12] $end
$var wire 1 1! Read_data_2 [11] $end
$var wire 1 2! Read_data_2 [10] $end
$var wire 1 3! Read_data_2 [9] $end
$var wire 1 4! Read_data_2 [8] $end
$var wire 1 5! Read_data_2 [7] $end
$var wire 1 6! Read_data_2 [6] $end
$var wire 1 7! Read_data_2 [5] $end
$var wire 1 8! Read_data_2 [4] $end
$var wire 1 9! Read_data_2 [3] $end
$var wire 1 :! Read_data_2 [2] $end
$var wire 1 ;! Read_data_2 [1] $end
$var wire 1 <! Read_data_2 [0] $end
$var wire 1 =! reset $end
$var wire 1 >! Sign_extend [31] $end
$var wire 1 ?! Sign_extend [30] $end
$var wire 1 @! Sign_extend [29] $end
$var wire 1 A! Sign_extend [28] $end
$var wire 1 B! Sign_extend [27] $end
$var wire 1 C! Sign_extend [26] $end
$var wire 1 D! Sign_extend [25] $end
$var wire 1 E! Sign_extend [24] $end
$var wire 1 F! Sign_extend [23] $end
$var wire 1 G! Sign_extend [22] $end
$var wire 1 H! Sign_extend [21] $end
$var wire 1 I! Sign_extend [20] $end
$var wire 1 J! Sign_extend [19] $end
$var wire 1 K! Sign_extend [18] $end
$var wire 1 L! Sign_extend [17] $end
$var wire 1 M! Sign_extend [16] $end
$var wire 1 N! Sign_extend [15] $end
$var wire 1 O! Sign_extend [14] $end
$var wire 1 P! Sign_extend [13] $end
$var wire 1 Q! Sign_extend [12] $end
$var wire 1 R! Sign_extend [11] $end
$var wire 1 S! Sign_extend [10] $end
$var wire 1 T! Sign_extend [9] $end
$var wire 1 U! Sign_extend [8] $end
$var wire 1 V! Sign_extend [7] $end
$var wire 1 W! Sign_extend [6] $end
$var wire 1 X! Sign_extend [5] $end
$var wire 1 Y! Sign_extend [4] $end
$var wire 1 Z! Sign_extend [3] $end
$var wire 1 [! Sign_extend [2] $end
$var wire 1 \! Sign_extend [1] $end
$var wire 1 ]! Sign_extend [0] $end
$var wire 1 ^! Zero $end

$scope module i1 $end
$var wire 1 _! gnd $end
$var wire 1 `! vcc $end
$var wire 1 a! unknown $end
$var wire 1 b! devoe $end
$var wire 1 c! devclrn $end
$var wire 1 d! devpor $end
$var wire 1 e! ww_devoe $end
$var wire 1 f! ww_devclrn $end
$var wire 1 g! ww_devpor $end
$var wire 1 h! ww_Zero $end
$var wire 1 i! ww_ALUSrc $end
$var wire 1 j! ww_clock $end
$var wire 1 k! ww_reset $end
$var wire 1 l! ww_ALUOp [1] $end
$var wire 1 m! ww_ALUOp [0] $end
$var wire 1 n! ww_Function_opcodes [5] $end
$var wire 1 o! ww_Function_opcodes [4] $end
$var wire 1 p! ww_Function_opcodes [3] $end
$var wire 1 q! ww_Function_opcodes [2] $end
$var wire 1 r! ww_Function_opcodes [1] $end
$var wire 1 s! ww_Function_opcodes [0] $end
$var wire 1 t! ww_PC_plus_4 [7] $end
$var wire 1 u! ww_PC_plus_4 [6] $end
$var wire 1 v! ww_PC_plus_4 [5] $end
$var wire 1 w! ww_PC_plus_4 [4] $end
$var wire 1 x! ww_PC_plus_4 [3] $end
$var wire 1 y! ww_PC_plus_4 [2] $end
$var wire 1 z! ww_PC_plus_4 [1] $end
$var wire 1 {! ww_PC_plus_4 [0] $end
$var wire 1 |! ww_Read_data_1 [31] $end
$var wire 1 }! ww_Read_data_1 [30] $end
$var wire 1 ~! ww_Read_data_1 [29] $end
$var wire 1 !" ww_Read_data_1 [28] $end
$var wire 1 "" ww_Read_data_1 [27] $end
$var wire 1 #" ww_Read_data_1 [26] $end
$var wire 1 $" ww_Read_data_1 [25] $end
$var wire 1 %" ww_Read_data_1 [24] $end
$var wire 1 &" ww_Read_data_1 [23] $end
$var wire 1 '" ww_Read_data_1 [22] $end
$var wire 1 (" ww_Read_data_1 [21] $end
$var wire 1 )" ww_Read_data_1 [20] $end
$var wire 1 *" ww_Read_data_1 [19] $end
$var wire 1 +" ww_Read_data_1 [18] $end
$var wire 1 ," ww_Read_data_1 [17] $end
$var wire 1 -" ww_Read_data_1 [16] $end
$var wire 1 ." ww_Read_data_1 [15] $end
$var wire 1 /" ww_Read_data_1 [14] $end
$var wire 1 0" ww_Read_data_1 [13] $end
$var wire 1 1" ww_Read_data_1 [12] $end
$var wire 1 2" ww_Read_data_1 [11] $end
$var wire 1 3" ww_Read_data_1 [10] $end
$var wire 1 4" ww_Read_data_1 [9] $end
$var wire 1 5" ww_Read_data_1 [8] $end
$var wire 1 6" ww_Read_data_1 [7] $end
$var wire 1 7" ww_Read_data_1 [6] $end
$var wire 1 8" ww_Read_data_1 [5] $end
$var wire 1 9" ww_Read_data_1 [4] $end
$var wire 1 :" ww_Read_data_1 [3] $end
$var wire 1 ;" ww_Read_data_1 [2] $end
$var wire 1 <" ww_Read_data_1 [1] $end
$var wire 1 =" ww_Read_data_1 [0] $end
$var wire 1 >" ww_Read_data_2 [31] $end
$var wire 1 ?" ww_Read_data_2 [30] $end
$var wire 1 @" ww_Read_data_2 [29] $end
$var wire 1 A" ww_Read_data_2 [28] $end
$var wire 1 B" ww_Read_data_2 [27] $end
$var wire 1 C" ww_Read_data_2 [26] $end
$var wire 1 D" ww_Read_data_2 [25] $end
$var wire 1 E" ww_Read_data_2 [24] $end
$var wire 1 F" ww_Read_data_2 [23] $end
$var wire 1 G" ww_Read_data_2 [22] $end
$var wire 1 H" ww_Read_data_2 [21] $end
$var wire 1 I" ww_Read_data_2 [20] $end
$var wire 1 J" ww_Read_data_2 [19] $end
$var wire 1 K" ww_Read_data_2 [18] $end
$var wire 1 L" ww_Read_data_2 [17] $end
$var wire 1 M" ww_Read_data_2 [16] $end
$var wire 1 N" ww_Read_data_2 [15] $end
$var wire 1 O" ww_Read_data_2 [14] $end
$var wire 1 P" ww_Read_data_2 [13] $end
$var wire 1 Q" ww_Read_data_2 [12] $end
$var wire 1 R" ww_Read_data_2 [11] $end
$var wire 1 S" ww_Read_data_2 [10] $end
$var wire 1 T" ww_Read_data_2 [9] $end
$var wire 1 U" ww_Read_data_2 [8] $end
$var wire 1 V" ww_Read_data_2 [7] $end
$var wire 1 W" ww_Read_data_2 [6] $end
$var wire 1 X" ww_Read_data_2 [5] $end
$var wire 1 Y" ww_Read_data_2 [4] $end
$var wire 1 Z" ww_Read_data_2 [3] $end
$var wire 1 [" ww_Read_data_2 [2] $end
$var wire 1 \" ww_Read_data_2 [1] $end
$var wire 1 ]" ww_Read_data_2 [0] $end
$var wire 1 ^" ww_Sign_extend [31] $end
$var wire 1 _" ww_Sign_extend [30] $end
$var wire 1 `" ww_Sign_extend [29] $end
$var wire 1 a" ww_Sign_extend [28] $end
$var wire 1 b" ww_Sign_extend [27] $end
$var wire 1 c" ww_Sign_extend [26] $end
$var wire 1 d" ww_Sign_extend [25] $end
$var wire 1 e" ww_Sign_extend [24] $end
$var wire 1 f" ww_Sign_extend [23] $end
$var wire 1 g" ww_Sign_extend [22] $end
$var wire 1 h" ww_Sign_extend [21] $end
$var wire 1 i" ww_Sign_extend [20] $end
$var wire 1 j" ww_Sign_extend [19] $end
$var wire 1 k" ww_Sign_extend [18] $end
$var wire 1 l" ww_Sign_extend [17] $end
$var wire 1 m" ww_Sign_extend [16] $end
$var wire 1 n" ww_Sign_extend [15] $end
$var wire 1 o" ww_Sign_extend [14] $end
$var wire 1 p" ww_Sign_extend [13] $end
$var wire 1 q" ww_Sign_extend [12] $end
$var wire 1 r" ww_Sign_extend [11] $end
$var wire 1 s" ww_Sign_extend [10] $end
$var wire 1 t" ww_Sign_extend [9] $end
$var wire 1 u" ww_Sign_extend [8] $end
$var wire 1 v" ww_Sign_extend [7] $end
$var wire 1 w" ww_Sign_extend [6] $end
$var wire 1 x" ww_Sign_extend [5] $end
$var wire 1 y" ww_Sign_extend [4] $end
$var wire 1 z" ww_Sign_extend [3] $end
$var wire 1 {" ww_Sign_extend [2] $end
$var wire 1 |" ww_Sign_extend [1] $end
$var wire 1 }" ww_Sign_extend [0] $end
$var wire 1 ~" ww_Add_Result [7] $end
$var wire 1 !# ww_Add_Result [6] $end
$var wire 1 "# ww_Add_Result [5] $end
$var wire 1 ## ww_Add_Result [4] $end
$var wire 1 $# ww_Add_Result [3] $end
$var wire 1 %# ww_Add_Result [2] $end
$var wire 1 &# ww_Add_Result [1] $end
$var wire 1 '# ww_Add_Result [0] $end
$var wire 1 (# ww_ALU_Result [31] $end
$var wire 1 )# ww_ALU_Result [30] $end
$var wire 1 *# ww_ALU_Result [29] $end
$var wire 1 +# ww_ALU_Result [28] $end
$var wire 1 ,# ww_ALU_Result [27] $end
$var wire 1 -# ww_ALU_Result [26] $end
$var wire 1 .# ww_ALU_Result [25] $end
$var wire 1 /# ww_ALU_Result [24] $end
$var wire 1 0# ww_ALU_Result [23] $end
$var wire 1 1# ww_ALU_Result [22] $end
$var wire 1 2# ww_ALU_Result [21] $end
$var wire 1 3# ww_ALU_Result [20] $end
$var wire 1 4# ww_ALU_Result [19] $end
$var wire 1 5# ww_ALU_Result [18] $end
$var wire 1 6# ww_ALU_Result [17] $end
$var wire 1 7# ww_ALU_Result [16] $end
$var wire 1 8# ww_ALU_Result [15] $end
$var wire 1 9# ww_ALU_Result [14] $end
$var wire 1 :# ww_ALU_Result [13] $end
$var wire 1 ;# ww_ALU_Result [12] $end
$var wire 1 <# ww_ALU_Result [11] $end
$var wire 1 =# ww_ALU_Result [10] $end
$var wire 1 ># ww_ALU_Result [9] $end
$var wire 1 ?# ww_ALU_Result [8] $end
$var wire 1 @# ww_ALU_Result [7] $end
$var wire 1 A# ww_ALU_Result [6] $end
$var wire 1 B# ww_ALU_Result [5] $end
$var wire 1 C# ww_ALU_Result [4] $end
$var wire 1 D# ww_ALU_Result [3] $end
$var wire 1 E# ww_ALU_Result [2] $end
$var wire 1 F# ww_ALU_Result [1] $end
$var wire 1 G# ww_ALU_Result [0] $end
$var wire 1 H# \clock~input_o\ $end
$var wire 1 I# \reset~input_o\ $end
$var wire 1 J# \Function_opcodes[5]~input_o\ $end
$var wire 1 K# \Function_opcodes[4]~input_o\ $end
$var wire 1 L# \PC_plus_4[1]~input_o\ $end
$var wire 1 M# \PC_plus_4[0]~input_o\ $end
$var wire 1 N# \~QUARTUS_CREATED_GND~I_combout\ $end
$var wire 1 O# \ALUOp[0]~input_o\ $end
$var wire 1 P# \Function_opcodes[2]~input_o\ $end
$var wire 1 Q# \Function_opcodes[0]~input_o\ $end
$var wire 1 R# \Function_opcodes[3]~input_o\ $end
$var wire 1 S# \ALUOp[1]~input_o\ $end
$var wire 1 T# \Function_opcodes[1]~input_o\ $end
$var wire 1 U# \inst|Mux15~2_combout\ $end
$var wire 1 V# \inst|Mux15~1_combout\ $end
$var wire 1 W# \Read_data_1[22]~input_o\ $end
$var wire 1 X# \ALUSrc~input_o\ $end
$var wire 1 Y# \Sign_extend[22]~input_o\ $end
$var wire 1 Z# \Read_data_2[22]~input_o\ $end
$var wire 1 [# \inst|Binput[22]~1_combout\ $end
$var wire 1 \# \inst|Mux15~3_combout\ $end
$var wire 1 ]# \inst|Mux9~0_combout\ $end
$var wire 1 ^# \Read_data_1[23]~input_o\ $end
$var wire 1 _# \Sign_extend[23]~input_o\ $end
$var wire 1 `# \Read_data_2[23]~input_o\ $end
$var wire 1 a# \inst|Binput[23]~0_combout\ $end
$var wire 1 b# \inst|Mux8~0_combout\ $end
$var wire 1 c# \Read_data_1[21]~input_o\ $end
$var wire 1 d# \Sign_extend[21]~input_o\ $end
$var wire 1 e# \Read_data_2[21]~input_o\ $end
$var wire 1 f# \inst|Binput[21]~26_combout\ $end
$var wire 1 g# \Read_data_1[20]~input_o\ $end
$var wire 1 h# \Read_data_2[20]~input_o\ $end
$var wire 1 i# \Sign_extend[20]~input_o\ $end
$var wire 1 j# \inst|Binput[20]~27_combout\ $end
$var wire 1 k# \Sign_extend[19]~input_o\ $end
$var wire 1 l# \Read_data_2[19]~input_o\ $end
$var wire 1 m# \inst|Binput[19]~20_combout\ $end
$var wire 1 n# \Read_data_1[19]~input_o\ $end
$var wire 1 o# \Read_data_1[18]~input_o\ $end
$var wire 1 p# \Sign_extend[18]~input_o\ $end
$var wire 1 q# \Read_data_2[18]~input_o\ $end
$var wire 1 r# \inst|Binput[18]~21_combout\ $end
$var wire 1 s# \Read_data_2[17]~input_o\ $end
$var wire 1 t# \Sign_extend[17]~input_o\ $end
$var wire 1 u# \inst|Binput[17]~14_combout\ $end
$var wire 1 v# \Read_data_1[17]~input_o\ $end
$var wire 1 w# \Read_data_1[16]~input_o\ $end
$var wire 1 x# \Read_data_2[16]~input_o\ $end
$var wire 1 y# \Sign_extend[16]~input_o\ $end
$var wire 1 z# \inst|Binput[16]~15_combout\ $end
$var wire 1 {# \Read_data_2[15]~input_o\ $end
$var wire 1 |# \Sign_extend[15]~input_o\ $end
$var wire 1 }# \inst|Binput[15]~8_combout\ $end
$var wire 1 ~# \Read_data_1[15]~input_o\ $end
$var wire 1 !$ \Read_data_1[14]~input_o\ $end
$var wire 1 "$ \Sign_extend[14]~input_o\ $end
$var wire 1 #$ \Read_data_2[14]~input_o\ $end
$var wire 1 $$ \inst|Binput[14]~9_combout\ $end
$var wire 1 %$ \Read_data_2[13]~input_o\ $end
$var wire 1 &$ \Sign_extend[13]~input_o\ $end
$var wire 1 '$ \inst|Binput[13]~2_combout\ $end
$var wire 1 ($ \Read_data_1[13]~input_o\ $end
$var wire 1 )$ \Read_data_2[12]~input_o\ $end
$var wire 1 *$ \Sign_extend[12]~input_o\ $end
$var wire 1 +$ \inst|Binput[12]~3_combout\ $end
$var wire 1 ,$ \Read_data_1[12]~input_o\ $end
$var wire 1 -$ \Sign_extend[11]~input_o\ $end
$var wire 1 .$ \Read_data_2[11]~input_o\ $end
$var wire 1 /$ \inst|Binput[11]~28_combout\ $end
$var wire 1 0$ \Read_data_1[11]~input_o\ $end
$var wire 1 1$ \Sign_extend[10]~input_o\ $end
$var wire 1 2$ \Read_data_2[10]~input_o\ $end
$var wire 1 3$ \inst|Binput[10]~29_combout\ $end
$var wire 1 4$ \Read_data_1[10]~input_o\ $end
$var wire 1 5$ \Read_data_1[9]~input_o\ $end
$var wire 1 6$ \Sign_extend[9]~input_o\ $end
$var wire 1 7$ \Read_data_2[9]~input_o\ $end
$var wire 1 8$ \inst|Binput[9]~22_combout\ $end
$var wire 1 9$ \Read_data_2[8]~input_o\ $end
$var wire 1 :$ \Sign_extend[8]~input_o\ $end
$var wire 1 ;$ \inst|Binput[8]~23_combout\ $end
$var wire 1 <$ \Read_data_1[8]~input_o\ $end
$var wire 1 =$ \Read_data_1[7]~input_o\ $end
$var wire 1 >$ \Read_data_2[7]~input_o\ $end
$var wire 1 ?$ \Sign_extend[7]~input_o\ $end
$var wire 1 @$ \inst|Binput[7]~16_combout\ $end
$var wire 1 A$ \Read_data_2[6]~input_o\ $end
$var wire 1 B$ \Sign_extend[6]~input_o\ $end
$var wire 1 C$ \inst|Binput[6]~17_combout\ $end
$var wire 1 D$ \Read_data_1[6]~input_o\ $end
$var wire 1 E$ \Read_data_2[5]~input_o\ $end
$var wire 1 F$ \Sign_extend[5]~input_o\ $end
$var wire 1 G$ \inst|Binput[5]~10_combout\ $end
$var wire 1 H$ \Read_data_1[5]~input_o\ $end
$var wire 1 I$ \Read_data_1[4]~input_o\ $end
$var wire 1 J$ \Read_data_2[4]~input_o\ $end
$var wire 1 K$ \Sign_extend[4]~input_o\ $end
$var wire 1 L$ \inst|Binput[4]~11_combout\ $end
$var wire 1 M$ \Read_data_1[3]~input_o\ $end
$var wire 1 N$ \Read_data_2[3]~input_o\ $end
$var wire 1 O$ \Sign_extend[3]~input_o\ $end
$var wire 1 P$ \inst|Binput[3]~4_combout\ $end
$var wire 1 Q$ \Read_data_1[2]~input_o\ $end
$var wire 1 R$ \Sign_extend[2]~input_o\ $end
$var wire 1 S$ \Read_data_2[2]~input_o\ $end
$var wire 1 T$ \inst|Binput[2]~5_combout\ $end
$var wire 1 U$ \Read_data_2[1]~input_o\ $end
$var wire 1 V$ \Sign_extend[1]~input_o\ $end
$var wire 1 W$ \inst|Binput[1]~30_combout\ $end
$var wire 1 X$ \Read_data_1[1]~input_o\ $end
$var wire 1 Y$ \Read_data_2[0]~input_o\ $end
$var wire 1 Z$ \Sign_extend[0]~input_o\ $end
$var wire 1 [$ \inst|Binput[0]~31_combout\ $end
$var wire 1 \$ \Read_data_1[0]~input_o\ $end
$var wire 1 ]$ \inst|Add1~130_cout\ $end
$var wire 1 ^$ \inst|Add1~126\ $end
$var wire 1 _$ \inst|Add1~122\ $end
$var wire 1 `$ \inst|Add1~22\ $end
$var wire 1 a$ \inst|Add1~18\ $end
$var wire 1 b$ \inst|Add1~42\ $end
$var wire 1 c$ \inst|Add1~46\ $end
$var wire 1 d$ \inst|Add1~70\ $end
$var wire 1 e$ \inst|Add1~66\ $end
$var wire 1 f$ \inst|Add1~94\ $end
$var wire 1 g$ \inst|Add1~90\ $end
$var wire 1 h$ \inst|Add1~118\ $end
$var wire 1 i$ \inst|Add1~114\ $end
$var wire 1 j$ \inst|Add1~14\ $end
$var wire 1 k$ \inst|Add1~10\ $end
$var wire 1 l$ \inst|Add1~38\ $end
$var wire 1 m$ \inst|Add1~34\ $end
$var wire 1 n$ \inst|Add1~58\ $end
$var wire 1 o$ \inst|Add1~62\ $end
$var wire 1 p$ \inst|Add1~82\ $end
$var wire 1 q$ \inst|Add1~86\ $end
$var wire 1 r$ \inst|Add1~106\ $end
$var wire 1 s$ \inst|Add1~110\ $end
$var wire 1 t$ \inst|Add1~1_sumout\ $end
$var wire 1 u$ \inst|Add1~2\ $end
$var wire 1 v$ \inst|Add1~5_sumout\ $end
$var wire 1 w$ \inst|Mux15~0_combout\ $end
$var wire 1 x$ \inst|Add1~13_sumout\ $end
$var wire 1 y$ \inst|Mux28~0_combout\ $end
$var wire 1 z$ \inst|Mux29~0_combout\ $end
$var wire 1 {$ \inst|Add1~21_sumout\ $end
$var wire 1 |$ \inst|Add1~17_sumout\ $end
$var wire 1 }$ \inst|Equal0~0_combout\ $end
$var wire 1 ~$ \inst|Mux19~0_combout\ $end
$var wire 1 !% \inst|Add1~9_sumout\ $end
$var wire 1 "% \inst|Mux18~0_combout\ $end
$var wire 1 #% \inst|Equal0~1_combout\ $end
$var wire 1 $% \inst|Equal0~2_combout\ $end
$var wire 1 %% \Read_data_1[28]~input_o\ $end
$var wire 1 &% \Sign_extend[28]~input_o\ $end
$var wire 1 '% \Read_data_2[28]~input_o\ $end
$var wire 1 (% \inst|Binput[28]~19_combout\ $end
$var wire 1 )% \Read_data_1[27]~input_o\ $end
$var wire 1 *% \Read_data_2[27]~input_o\ $end
$var wire 1 +% \Sign_extend[27]~input_o\ $end
$var wire 1 ,% \inst|Binput[27]~12_combout\ $end
$var wire 1 -% \Read_data_1[26]~input_o\ $end
$var wire 1 .% \Read_data_2[26]~input_o\ $end
$var wire 1 /% \Sign_extend[26]~input_o\ $end
$var wire 1 0% \inst|Binput[26]~13_combout\ $end
$var wire 1 1% \Sign_extend[25]~input_o\ $end
$var wire 1 2% \Read_data_2[25]~input_o\ $end
$var wire 1 3% \inst|Binput[25]~6_combout\ $end
$var wire 1 4% \Read_data_1[25]~input_o\ $end
$var wire 1 5% \Sign_extend[24]~input_o\ $end
$var wire 1 6% \Read_data_2[24]~input_o\ $end
$var wire 1 7% \inst|Binput[24]~7_combout\ $end
$var wire 1 8% \Read_data_1[24]~input_o\ $end
$var wire 1 9% \inst|Add1~6\ $end
$var wire 1 :% \inst|Add1~26\ $end
$var wire 1 ;% \inst|Add1~30\ $end
$var wire 1 <% \inst|Add1~50\ $end
$var wire 1 =% \inst|Add1~54\ $end
$var wire 1 >% \inst|Add1~73_sumout\ $end
$var wire 1 ?% \Read_data_1[29]~input_o\ $end
$var wire 1 @% \Sign_extend[29]~input_o\ $end
$var wire 1 A% \Read_data_2[29]~input_o\ $end
$var wire 1 B% \inst|Binput[29]~18_combout\ $end
$var wire 1 C% \inst|Mux2~0_combout\ $end
$var wire 1 D% \inst|Add1~74\ $end
$var wire 1 E% \inst|Add1~77_sumout\ $end
$var wire 1 F% \inst|Mux3~0_combout\ $end
$var wire 1 G% \inst|Mux13~0_combout\ $end
$var wire 1 H% \inst|Mux22~0_combout\ $end
$var wire 1 I% \inst|Add1~93_sumout\ $end
$var wire 1 J% \inst|Add1~89_sumout\ $end
$var wire 1 K% \inst|Mux23~0_combout\ $end
$var wire 1 L% \inst|Equal0~9_combout\ $end
$var wire 1 M% \inst|Mux12~0_combout\ $end
$var wire 1 N% \inst|Add1~85_sumout\ $end
$var wire 1 O% \inst|Add1~81_sumout\ $end
$var wire 1 P% \inst|Equal0~10_combout\ $end
$var wire 1 Q% \inst|Equal0~11_combout\ $end
$var wire 1 R% \inst|Mux5~0_combout\ $end
$var wire 1 S% \inst|Mux4~0_combout\ $end
$var wire 1 T% \inst|Add1~61_sumout\ $end
$var wire 1 U% \inst|Mux24~0_combout\ $end
$var wire 1 V% \inst|Add1~65_sumout\ $end
$var wire 1 W% \inst|Add1~69_sumout\ $end
$var wire 1 X% \inst|Mux25~0_combout\ $end
$var wire 1 Y% \inst|Equal0~6_combout\ $end
$var wire 1 Z% \inst|Mux15~4_combout\ $end
$var wire 1 [% \inst|Add1~57_sumout\ $end
$var wire 1 \% \inst|Mux14~0_combout\ $end
$var wire 1 ]% \inst|Equal0~7_combout\ $end
$var wire 1 ^% \inst|Add1~49_sumout\ $end
$var wire 1 _% \inst|Add1~53_sumout\ $end
$var wire 1 `% \inst|Equal0~8_combout\ $end
$var wire 1 a% \inst|Mux7~0_combout\ $end
$var wire 1 b% \inst|Add1~29_sumout\ $end
$var wire 1 c% \inst|Add1~25_sumout\ $end
$var wire 1 d% \inst|Mux6~0_combout\ $end
$var wire 1 e% \inst|Add1~37_sumout\ $end
$var wire 1 f% \inst|Mux26~0_combout\ $end
$var wire 1 g% \inst|Add1~45_sumout\ $end
$var wire 1 h% \inst|Add1~41_sumout\ $end
$var wire 1 i% \inst|Mux27~0_combout\ $end
$var wire 1 j% \inst|Equal0~3_combout\ $end
$var wire 1 k% \inst|Mux17~0_combout\ $end
$var wire 1 l% \inst|Mux16~0_combout\ $end
$var wire 1 m% \inst|Add1~33_sumout\ $end
$var wire 1 n% \inst|Equal0~4_combout\ $end
$var wire 1 o% \inst|Equal0~5_combout\ $end
$var wire 1 p% \Read_data_1[31]~input_o\ $end
$var wire 1 q% \Sign_extend[31]~input_o\ $end
$var wire 1 r% \Read_data_2[31]~input_o\ $end
$var wire 1 s% \inst|Binput[31]~24_combout\ $end
$var wire 1 t% \inst|Mux0~0_combout\ $end
$var wire 1 u% \Sign_extend[30]~input_o\ $end
$var wire 1 v% \Read_data_2[30]~input_o\ $end
$var wire 1 w% \inst|Binput[30]~25_combout\ $end
$var wire 1 x% \Read_data_1[30]~input_o\ $end
$var wire 1 y% \inst|Add1~78\ $end
$var wire 1 z% \inst|Add1~97_sumout\ $end
$var wire 1 {% \inst|Add1~109_sumout\ $end
$var wire 1 |% \inst|Mux10~0_combout\ $end
$var wire 1 }% \inst|Mux20~0_combout\ $end
$var wire 1 ~% \inst|Mux21~0_combout\ $end
$var wire 1 !& \inst|Add1~117_sumout\ $end
$var wire 1 "& \inst|Add1~113_sumout\ $end
$var wire 1 #& \inst|Mux30~0_combout\ $end
$var wire 1 $& \inst|Add1~125_sumout\ $end
$var wire 1 %& \inst|Add1~121_sumout\ $end
$var wire 1 && \inst|Mux31~0_combout\ $end
$var wire 1 '& \inst|Equal0~12_combout\ $end
$var wire 1 (& \inst|Equal0~13_combout\ $end
$var wire 1 )& \inst|Mux11~0_combout\ $end
$var wire 1 *& \inst|Add1~105_sumout\ $end
$var wire 1 +& \inst|Equal0~14_combout\ $end
$var wire 1 ,& \inst|Add1~98\ $end
$var wire 1 -& \inst|Add1~101_sumout\ $end
$var wire 1 .& \inst|Mux1~0_combout\ $end
$var wire 1 /& \inst|Equal0~15_combout\ $end
$var wire 1 0& \inst|Equal0~16_combout\ $end
$var wire 1 1& \PC_plus_4[7]~input_o\ $end
$var wire 1 2& \PC_plus_4[6]~input_o\ $end
$var wire 1 3& \PC_plus_4[5]~input_o\ $end
$var wire 1 4& \PC_plus_4[4]~input_o\ $end
$var wire 1 5& \PC_plus_4[3]~input_o\ $end
$var wire 1 6& \PC_plus_4[2]~input_o\ $end
$var wire 1 7& \inst|Add0~30\ $end
$var wire 1 8& \inst|Add0~26\ $end
$var wire 1 9& \inst|Add0~22\ $end
$var wire 1 :& \inst|Add0~18\ $end
$var wire 1 ;& \inst|Add0~14\ $end
$var wire 1 <& \inst|Add0~10\ $end
$var wire 1 =& \inst|Add0~6\ $end
$var wire 1 >& \inst|Add0~1_sumout\ $end
$var wire 1 ?& \inst|Add0~5_sumout\ $end
$var wire 1 @& \inst|Add0~9_sumout\ $end
$var wire 1 A& \inst|Add0~13_sumout\ $end
$var wire 1 B& \inst|Add0~17_sumout\ $end
$var wire 1 C& \inst|Add0~21_sumout\ $end
$var wire 1 D& \inst|Add0~25_sumout\ $end
$var wire 1 E& \inst|Add0~29_sumout\ $end
$var wire 1 F& \inst|Equal1~0_combout\ $end
$var wire 1 G& \inst|ALU_Result[31]~0_combout\ $end
$var wire 1 H& \inst|ALU_Result[30]~1_combout\ $end
$var wire 1 I& \inst|ALU_Result[29]~2_combout\ $end
$var wire 1 J& \inst|ALU_Result[28]~3_combout\ $end
$var wire 1 K& \inst|ALU_Result[27]~4_combout\ $end
$var wire 1 L& \inst|ALU_Result[26]~5_combout\ $end
$var wire 1 M& \inst|ALU_Result[25]~6_combout\ $end
$var wire 1 N& \inst|ALU_Result[24]~7_combout\ $end
$var wire 1 O& \inst|ALU_Result[23]~8_combout\ $end
$var wire 1 P& \inst|ALU_Result[22]~9_combout\ $end
$var wire 1 Q& \inst|ALU_Result[21]~10_combout\ $end
$var wire 1 R& \inst|ALU_Result[20]~11_combout\ $end
$var wire 1 S& \inst|ALU_Result[19]~12_combout\ $end
$var wire 1 T& \inst|ALU_Result[18]~13_combout\ $end
$var wire 1 U& \inst|ALU_Result[17]~14_combout\ $end
$var wire 1 V& \inst|ALU_Result[16]~15_combout\ $end
$var wire 1 W& \inst|ALU_Result[15]~16_combout\ $end
$var wire 1 X& \inst|ALU_Result[14]~17_combout\ $end
$var wire 1 Y& \inst|ALU_Result[13]~18_combout\ $end
$var wire 1 Z& \inst|ALU_Result[12]~19_combout\ $end
$var wire 1 [& \inst|ALU_Result[11]~20_combout\ $end
$var wire 1 \& \inst|ALU_Result[10]~21_combout\ $end
$var wire 1 ]& \inst|ALU_Result[9]~22_combout\ $end
$var wire 1 ^& \inst|ALU_Result[8]~23_combout\ $end
$var wire 1 _& \inst|ALU_Result[7]~24_combout\ $end
$var wire 1 `& \inst|ALU_Result[6]~25_combout\ $end
$var wire 1 a& \inst|ALU_Result[5]~26_combout\ $end
$var wire 1 b& \inst|ALU_Result[4]~27_combout\ $end
$var wire 1 c& \inst|ALU_Result[3]~28_combout\ $end
$var wire 1 d& \inst|ALU_Result[2]~29_combout\ $end
$var wire 1 e& \inst|ALU_Result[1]~30_combout\ $end
$var wire 1 f& \inst|ALU_Result[0]~31_combout\ $end
$var wire 1 g& \inst|ALT_INV_Add1~125_sumout\ $end
$var wire 1 h& \inst|ALT_INV_Add1~121_sumout\ $end
$var wire 1 i& \inst|ALT_INV_Add1~117_sumout\ $end
$var wire 1 j& \inst|ALT_INV_Add1~113_sumout\ $end
$var wire 1 k& \inst|ALT_INV_Add1~109_sumout\ $end
$var wire 1 l& \inst|ALT_INV_Add1~105_sumout\ $end
$var wire 1 m& \inst|ALT_INV_Add1~101_sumout\ $end
$var wire 1 n& \inst|ALT_INV_Add1~97_sumout\ $end
$var wire 1 o& \inst|ALT_INV_Add1~93_sumout\ $end
$var wire 1 p& \inst|ALT_INV_Add1~89_sumout\ $end
$var wire 1 q& \inst|ALT_INV_Add1~85_sumout\ $end
$var wire 1 r& \inst|ALT_INV_Add1~81_sumout\ $end
$var wire 1 s& \inst|ALT_INV_Add1~77_sumout\ $end
$var wire 1 t& \inst|ALT_INV_Add1~73_sumout\ $end
$var wire 1 u& \inst|ALT_INV_Add1~69_sumout\ $end
$var wire 1 v& \inst|ALT_INV_Add1~65_sumout\ $end
$var wire 1 w& \inst|ALT_INV_Add1~61_sumout\ $end
$var wire 1 x& \inst|ALT_INV_Add1~57_sumout\ $end
$var wire 1 y& \inst|ALT_INV_Add1~53_sumout\ $end
$var wire 1 z& \inst|ALT_INV_Add1~49_sumout\ $end
$var wire 1 {& \inst|ALT_INV_Add1~45_sumout\ $end
$var wire 1 |& \inst|ALT_INV_Add1~41_sumout\ $end
$var wire 1 }& \inst|ALT_INV_Add1~37_sumout\ $end
$var wire 1 ~& \inst|ALT_INV_Add1~33_sumout\ $end
$var wire 1 !' \inst|ALT_INV_Add1~29_sumout\ $end
$var wire 1 "' \inst|ALT_INV_Add1~25_sumout\ $end
$var wire 1 #' \inst|ALT_INV_Add1~21_sumout\ $end
$var wire 1 $' \inst|ALT_INV_Add1~17_sumout\ $end
$var wire 1 %' \inst|ALT_INV_Add1~13_sumout\ $end
$var wire 1 &' \inst|ALT_INV_Add1~9_sumout\ $end
$var wire 1 '' \inst|ALT_INV_Add1~5_sumout\ $end
$var wire 1 (' \inst|ALT_INV_Add1~1_sumout\ $end
$var wire 1 )' \inst|ALT_INV_Equal1~0_combout\ $end
$var wire 1 *' \inst|ALT_INV_Equal0~15_combout\ $end
$var wire 1 +' \inst|ALT_INV_Equal0~14_combout\ $end
$var wire 1 ,' \inst|ALT_INV_Equal0~13_combout\ $end
$var wire 1 -' \inst|ALT_INV_Equal0~12_combout\ $end
$var wire 1 .' \inst|ALT_INV_Mux31~0_combout\ $end
$var wire 1 /' \inst|ALT_INV_Binput[0]~31_combout\ $end
$var wire 1 0' \inst|ALT_INV_Mux30~0_combout\ $end
$var wire 1 1' \inst|ALT_INV_Binput[1]~30_combout\ $end
$var wire 1 2' \inst|ALT_INV_Mux21~0_combout\ $end
$var wire 1 3' \inst|ALT_INV_Binput[10]~29_combout\ $end
$var wire 1 4' \inst|ALT_INV_Mux20~0_combout\ $end
$var wire 1 5' \inst|ALT_INV_Binput[11]~28_combout\ $end
$var wire 1 6' \inst|ALT_INV_Mux11~0_combout\ $end
$var wire 1 7' \inst|ALT_INV_Binput[20]~27_combout\ $end
$var wire 1 8' \inst|ALT_INV_Mux10~0_combout\ $end
$var wire 1 9' \inst|ALT_INV_Binput[21]~26_combout\ $end
$var wire 1 :' \inst|ALT_INV_Mux1~0_combout\ $end
$var wire 1 ;' \inst|ALT_INV_Binput[30]~25_combout\ $end
$var wire 1 <' \inst|ALT_INV_Mux0~0_combout\ $end
$var wire 1 =' \inst|ALT_INV_Binput[31]~24_combout\ $end
$var wire 1 >' \inst|ALT_INV_Equal0~11_combout\ $end
$var wire 1 ?' \inst|ALT_INV_Equal0~10_combout\ $end
$var wire 1 @' \inst|ALT_INV_Equal0~9_combout\ $end
$var wire 1 A' \inst|ALT_INV_Mux23~0_combout\ $end
$var wire 1 B' \inst|ALT_INV_Binput[8]~23_combout\ $end
$var wire 1 C' \inst|ALT_INV_Mux22~0_combout\ $end
$var wire 1 D' \inst|ALT_INV_Binput[9]~22_combout\ $end
$var wire 1 E' \inst|ALT_INV_Mux13~0_combout\ $end
$var wire 1 F' \inst|ALT_INV_Binput[18]~21_combout\ $end
$var wire 1 G' \inst|ALT_INV_Mux12~0_combout\ $end
$var wire 1 H' \inst|ALT_INV_Binput[19]~20_combout\ $end
$var wire 1 I' \inst|ALT_INV_Mux3~0_combout\ $end
$var wire 1 J' \inst|ALT_INV_Binput[28]~19_combout\ $end
$var wire 1 K' \inst|ALT_INV_Mux2~0_combout\ $end
$var wire 1 L' \inst|ALT_INV_Binput[29]~18_combout\ $end
$var wire 1 M' \inst|ALT_INV_Equal0~8_combout\ $end
$var wire 1 N' \inst|ALT_INV_Equal0~7_combout\ $end
$var wire 1 O' \inst|ALT_INV_Equal0~6_combout\ $end
$var wire 1 P' \inst|ALT_INV_Mux25~0_combout\ $end
$var wire 1 Q' \inst|ALT_INV_Binput[6]~17_combout\ $end
$var wire 1 R' \inst|ALT_INV_Mux24~0_combout\ $end
$var wire 1 S' \inst|ALT_INV_Binput[7]~16_combout\ $end
$var wire 1 T' \inst|ALT_INV_Mux15~4_combout\ $end
$var wire 1 U' \inst|ALT_INV_Binput[16]~15_combout\ $end
$var wire 1 V' \inst|ALT_INV_Mux14~0_combout\ $end
$var wire 1 W' \inst|ALT_INV_Binput[17]~14_combout\ $end
$var wire 1 X' \inst|ALT_INV_Mux5~0_combout\ $end
$var wire 1 Y' \inst|ALT_INV_Binput[26]~13_combout\ $end
$var wire 1 Z' \inst|ALT_INV_Mux4~0_combout\ $end
$var wire 1 [' \inst|ALT_INV_Binput[27]~12_combout\ $end
$var wire 1 \' \inst|ALT_INV_Equal0~5_combout\ $end
$var wire 1 ]' \inst|ALT_INV_Equal0~4_combout\ $end
$var wire 1 ^' \inst|ALT_INV_Equal0~3_combout\ $end
$var wire 1 _' \inst|ALT_INV_Mux27~0_combout\ $end
$var wire 1 `' \inst|ALT_INV_Binput[4]~11_combout\ $end
$var wire 1 a' \inst|ALT_INV_Mux26~0_combout\ $end
$var wire 1 b' \inst|ALT_INV_Binput[5]~10_combout\ $end
$var wire 1 c' \inst|ALT_INV_Mux17~0_combout\ $end
$var wire 1 d' \inst|ALT_INV_Binput[14]~9_combout\ $end
$var wire 1 e' \inst|ALT_INV_Mux16~0_combout\ $end
$var wire 1 f' \inst|ALT_INV_Binput[15]~8_combout\ $end
$var wire 1 g' \inst|ALT_INV_Mux7~0_combout\ $end
$var wire 1 h' \inst|ALT_INV_Binput[24]~7_combout\ $end
$var wire 1 i' \inst|ALT_INV_Mux6~0_combout\ $end
$var wire 1 j' \inst|ALT_INV_Binput[25]~6_combout\ $end
$var wire 1 k' \inst|ALT_INV_Equal0~2_combout\ $end
$var wire 1 l' \inst|ALT_INV_Equal0~1_combout\ $end
$var wire 1 m' \inst|ALT_INV_Equal0~0_combout\ $end
$var wire 1 n' \inst|ALT_INV_Mux29~0_combout\ $end
$var wire 1 o' \inst|ALT_INV_Binput[2]~5_combout\ $end
$var wire 1 p' \inst|ALT_INV_Mux28~0_combout\ $end
$var wire 1 q' \inst|ALT_INV_Binput[3]~4_combout\ $end
$var wire 1 r' \inst|ALT_INV_Mux19~0_combout\ $end
$var wire 1 s' \inst|ALT_INV_Binput[12]~3_combout\ $end
$var wire 1 t' \inst|ALT_INV_Mux18~0_combout\ $end
$var wire 1 u' \inst|ALT_INV_Binput[13]~2_combout\ $end
$var wire 1 v' \inst|ALT_INV_Mux9~0_combout\ $end
$var wire 1 w' \inst|ALT_INV_Binput[22]~1_combout\ $end
$var wire 1 x' \inst|ALT_INV_Mux8~0_combout\ $end
$var wire 1 y' \inst|ALT_INV_Binput[23]~0_combout\ $end
$var wire 1 z' \inst|ALT_INV_Mux15~3_combout\ $end
$var wire 1 {' \inst|ALT_INV_Mux15~2_combout\ $end
$var wire 1 |' \inst|ALT_INV_Mux15~1_combout\ $end
$var wire 1 }' \inst|ALT_INV_Mux15~0_combout\ $end
$var wire 1 ~' \ALT_INV_Sign_extend[17]~input_o\ $end
$var wire 1 !( \ALT_INV_Read_data_1[17]~input_o\ $end
$var wire 1 "( \ALT_INV_Read_data_2[26]~input_o\ $end
$var wire 1 #( \ALT_INV_Sign_extend[26]~input_o\ $end
$var wire 1 $( \ALT_INV_Read_data_1[26]~input_o\ $end
$var wire 1 %( \ALT_INV_Read_data_2[27]~input_o\ $end
$var wire 1 &( \ALT_INV_Sign_extend[27]~input_o\ $end
$var wire 1 '( \ALT_INV_Read_data_1[27]~input_o\ $end
$var wire 1 (( \ALT_INV_Read_data_1[4]~input_o\ $end
$var wire 1 )( \ALT_INV_Read_data_2[4]~input_o\ $end
$var wire 1 *( \ALT_INV_Sign_extend[4]~input_o\ $end
$var wire 1 +( \ALT_INV_Read_data_1[5]~input_o\ $end
$var wire 1 ,( \ALT_INV_Read_data_2[5]~input_o\ $end
$var wire 1 -( \ALT_INV_Sign_extend[5]~input_o\ $end
$var wire 1 .( \ALT_INV_Read_data_1[14]~input_o\ $end
$var wire 1 /( \ALT_INV_Read_data_2[14]~input_o\ $end
$var wire 1 0( \ALT_INV_Sign_extend[14]~input_o\ $end
$var wire 1 1( \ALT_INV_Read_data_1[15]~input_o\ $end
$var wire 1 2( \ALT_INV_Read_data_2[15]~input_o\ $end
$var wire 1 3( \ALT_INV_Sign_extend[15]~input_o\ $end
$var wire 1 4( \ALT_INV_Read_data_2[24]~input_o\ $end
$var wire 1 5( \ALT_INV_Sign_extend[24]~input_o\ $end
$var wire 1 6( \ALT_INV_Read_data_1[24]~input_o\ $end
$var wire 1 7( \ALT_INV_Read_data_2[25]~input_o\ $end
$var wire 1 8( \ALT_INV_Sign_extend[25]~input_o\ $end
$var wire 1 9( \ALT_INV_Read_data_1[25]~input_o\ $end
$var wire 1 :( \ALT_INV_Read_data_1[2]~input_o\ $end
$var wire 1 ;( \ALT_INV_Read_data_2[2]~input_o\ $end
$var wire 1 <( \ALT_INV_Sign_extend[2]~input_o\ $end
$var wire 1 =( \ALT_INV_Read_data_1[3]~input_o\ $end
$var wire 1 >( \ALT_INV_Read_data_2[3]~input_o\ $end
$var wire 1 ?( \ALT_INV_Sign_extend[3]~input_o\ $end
$var wire 1 @( \ALT_INV_Read_data_1[12]~input_o\ $end
$var wire 1 A( \ALT_INV_Read_data_2[12]~input_o\ $end
$var wire 1 B( \ALT_INV_Sign_extend[12]~input_o\ $end
$var wire 1 C( \ALT_INV_Read_data_1[13]~input_o\ $end
$var wire 1 D( \ALT_INV_Read_data_2[13]~input_o\ $end
$var wire 1 E( \ALT_INV_Sign_extend[13]~input_o\ $end
$var wire 1 F( \ALT_INV_Read_data_2[22]~input_o\ $end
$var wire 1 G( \ALT_INV_Sign_extend[22]~input_o\ $end
$var wire 1 H( \ALT_INV_Read_data_1[22]~input_o\ $end
$var wire 1 I( \ALT_INV_Read_data_2[23]~input_o\ $end
$var wire 1 J( \ALT_INV_Sign_extend[23]~input_o\ $end
$var wire 1 K( \ALT_INV_ALUSrc~input_o\ $end
$var wire 1 L( \ALT_INV_Read_data_1[23]~input_o\ $end
$var wire 1 M( \ALT_INV_Function_opcodes[1]~input_o\ $end
$var wire 1 N( \ALT_INV_ALUOp[0]~input_o\ $end
$var wire 1 O( \ALT_INV_ALUOp[1]~input_o\ $end
$var wire 1 P( \ALT_INV_Function_opcodes[0]~input_o\ $end
$var wire 1 Q( \ALT_INV_Function_opcodes[3]~input_o\ $end
$var wire 1 R( \ALT_INV_Function_opcodes[2]~input_o\ $end
$var wire 1 S( \ALT_INV_PC_plus_4[2]~input_o\ $end
$var wire 1 T( \ALT_INV_PC_plus_4[3]~input_o\ $end
$var wire 1 U( \ALT_INV_PC_plus_4[4]~input_o\ $end
$var wire 1 V( \ALT_INV_PC_plus_4[5]~input_o\ $end
$var wire 1 W( \ALT_INV_PC_plus_4[6]~input_o\ $end
$var wire 1 X( \ALT_INV_PC_plus_4[7]~input_o\ $end
$var wire 1 Y( \ALT_INV_Read_data_1[0]~input_o\ $end
$var wire 1 Z( \ALT_INV_Read_data_2[0]~input_o\ $end
$var wire 1 [( \ALT_INV_Sign_extend[0]~input_o\ $end
$var wire 1 \( \ALT_INV_Read_data_1[1]~input_o\ $end
$var wire 1 ]( \ALT_INV_Read_data_2[1]~input_o\ $end
$var wire 1 ^( \ALT_INV_Sign_extend[1]~input_o\ $end
$var wire 1 _( \ALT_INV_Read_data_1[10]~input_o\ $end
$var wire 1 `( \ALT_INV_Read_data_2[10]~input_o\ $end
$var wire 1 a( \ALT_INV_Sign_extend[10]~input_o\ $end
$var wire 1 b( \ALT_INV_Read_data_1[11]~input_o\ $end
$var wire 1 c( \ALT_INV_Read_data_2[11]~input_o\ $end
$var wire 1 d( \ALT_INV_Sign_extend[11]~input_o\ $end
$var wire 1 e( \ALT_INV_Read_data_2[20]~input_o\ $end
$var wire 1 f( \ALT_INV_Sign_extend[20]~input_o\ $end
$var wire 1 g( \ALT_INV_Read_data_1[20]~input_o\ $end
$var wire 1 h( \ALT_INV_Read_data_2[21]~input_o\ $end
$var wire 1 i( \ALT_INV_Sign_extend[21]~input_o\ $end
$var wire 1 j( \ALT_INV_Read_data_1[21]~input_o\ $end
$var wire 1 k( \ALT_INV_Read_data_2[30]~input_o\ $end
$var wire 1 l( \ALT_INV_Sign_extend[30]~input_o\ $end
$var wire 1 m( \ALT_INV_Read_data_1[30]~input_o\ $end
$var wire 1 n( \ALT_INV_Read_data_2[31]~input_o\ $end
$var wire 1 o( \ALT_INV_Sign_extend[31]~input_o\ $end
$var wire 1 p( \ALT_INV_Read_data_1[31]~input_o\ $end
$var wire 1 q( \ALT_INV_Read_data_1[8]~input_o\ $end
$var wire 1 r( \ALT_INV_Read_data_2[8]~input_o\ $end
$var wire 1 s( \ALT_INV_Sign_extend[8]~input_o\ $end
$var wire 1 t( \ALT_INV_Read_data_1[9]~input_o\ $end
$var wire 1 u( \ALT_INV_Read_data_2[9]~input_o\ $end
$var wire 1 v( \ALT_INV_Sign_extend[9]~input_o\ $end
$var wire 1 w( \ALT_INV_Read_data_2[18]~input_o\ $end
$var wire 1 x( \ALT_INV_Sign_extend[18]~input_o\ $end
$var wire 1 y( \ALT_INV_Read_data_1[18]~input_o\ $end
$var wire 1 z( \ALT_INV_Read_data_2[19]~input_o\ $end
$var wire 1 {( \ALT_INV_Sign_extend[19]~input_o\ $end
$var wire 1 |( \ALT_INV_Read_data_1[19]~input_o\ $end
$var wire 1 }( \ALT_INV_Read_data_2[28]~input_o\ $end
$var wire 1 ~( \ALT_INV_Sign_extend[28]~input_o\ $end
$var wire 1 !) \ALT_INV_Read_data_1[28]~input_o\ $end
$var wire 1 ") \ALT_INV_Read_data_2[29]~input_o\ $end
$var wire 1 #) \ALT_INV_Sign_extend[29]~input_o\ $end
$var wire 1 $) \ALT_INV_Read_data_1[29]~input_o\ $end
$var wire 1 %) \ALT_INV_Read_data_1[6]~input_o\ $end
$var wire 1 &) \ALT_INV_Read_data_2[6]~input_o\ $end
$var wire 1 ') \ALT_INV_Sign_extend[6]~input_o\ $end
$var wire 1 () \ALT_INV_Read_data_1[7]~input_o\ $end
$var wire 1 )) \ALT_INV_Read_data_2[7]~input_o\ $end
$var wire 1 *) \ALT_INV_Sign_extend[7]~input_o\ $end
$var wire 1 +) \ALT_INV_Read_data_2[16]~input_o\ $end
$var wire 1 ,) \ALT_INV_Sign_extend[16]~input_o\ $end
$var wire 1 -) \ALT_INV_Read_data_1[16]~input_o\ $end
$var wire 1 .) \ALT_INV_Read_data_2[17]~input_o\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0K
0L
0=!
0^!
0_!
1`!
xa!
1b!
1c!
1d!
1e!
1f!
1g!
0h!
0i!
0j!
0k!
0H#
0I#
1J#
0K#
0L#
0M#
xN#
0O#
0P#
0Q#
1R#
1S#
1T#
0U#
0V#
0W#
0X#
0Y#
1Z#
1[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
1e#
1f#
0g#
1h#
0i#
1j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
1E$
0F$
1G$
0H$
0I$
1J$
0K$
1L$
0M$
1N$
0O$
1P$
0Q$
0R$
1S$
1T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
1]$
1^$
1_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
1v$
0w$
1x$
0y$
0z$
1{$
0|$
0}$
0~$
1!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0*%
0+%
0,%
0-%
0.%
0/%
00%
01%
02%
03%
04%
05%
06%
07%
08%
09%
0:%
0;%
0<%
0=%
1>%
0?%
0@%
0A%
0B%
0C%
0D%
1E%
0F%
0G%
0H%
1I%
1J%
0K%
0L%
0M%
1N%
1O%
0P%
0Q%
0R%
0S%
1T%
0U%
1V%
1W%
0X%
0Y%
0Z%
1[%
0\%
0]%
1^%
1_%
0`%
0a%
1b%
1c%
0d%
1e%
0f%
0g%
0h%
0i%
1j%
0k%
0l%
1m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
1x%
0y%
0z%
0{%
0|%
0}%
0~%
1!&
1"&
0#&
0$&
0%&
0&&
1'&
0(&
0)&
0*&
0+&
1,&
0-&
0.&
0/&
00&
01&
02&
03&
04&
05&
06&
07&
08&
09&
0:&
0;&
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
1F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
1g&
1h&
0i&
0j&
1k&
1l&
1m&
1n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
0z&
1{&
1|&
0}&
0~&
0!'
0"'
0#'
1$'
0%'
0&'
0''
1('
0)'
1*'
1+'
1,'
0-'
1.'
1/'
10'
11'
12'
13'
14'
15'
16'
07'
18'
09'
1:'
1;'
1<'
1='
1>'
1?'
1@'
1A'
1B'
1C'
1D'
1E'
1F'
1G'
1H'
1I'
1J'
1K'
1L'
1M'
1N'
1O'
1P'
1Q'
1R'
1S'
1T'
1U'
1V'
1W'
1X'
1Y'
1Z'
1['
1\'
1]'
0^'
1_'
0`'
1a'
0b'
1c'
1d'
1e'
1f'
1g'
1h'
1i'
1j'
1k'
1l'
1m'
1n'
0o'
1p'
0q'
1r'
1s'
1t'
1u'
1v'
0w'
1x'
1y'
1z'
1{'
1|'
1}'
1~'
1!(
1"(
1#(
1$(
1%(
1&(
1'(
1((
0)(
1*(
1+(
0,(
1-(
1.(
1/(
10(
11(
12(
13(
14(
15(
16(
17(
18(
19(
1:(
0;(
1<(
1=(
0>(
1?(
1@(
1A(
1B(
1C(
1D(
1E(
0F(
1G(
1H(
1I(
1J(
1K(
1L(
0M(
1N(
0O(
1P(
0Q(
1R(
1S(
1T(
1U(
1V(
1W(
1X(
1Y(
1Z(
1[(
1\(
1](
1^(
1_(
1`(
1a(
1b(
1c(
1d(
0e(
1f(
1g(
0h(
1i(
1j(
1k(
1l(
0m(
1n(
1o(
1p(
1q(
1r(
1s(
1t(
1u(
1v(
1w(
1x(
1y(
1z(
1{(
1|(
1}(
1~(
1!)
1")
1#)
1$)
1%)
1&)
1')
1()
1))
1*)
1+)
1,)
1-)
1.)
1I
0J
1M
0N
1O
0P
1Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
1\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
1&!
1'!
1(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
17!
18!
19!
1:!
0;!
0<!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
1l!
0m!
1n!
0o!
1p!
0q!
1r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
1}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
1G"
1H"
1I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
1X"
1Y"
1Z"
1["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
$end
#130000
0I
0M
0O
0Q
0\
0&!
0'!
0(!
07!
08!
09!
0:!
0l!
0r!
0p!
0n!
0}!
0["
0Z"
0Y"
0X"
0I"
0H"
0G"
0Z#
0e#
0h#
0E$
0J$
0N$
0S$
0x%
0J#
0R#
0T#
0S#
1O(
1M(
1Q(
1m(
1;(
1>(
1)(
1,(
1e(
1h(
1F(
0[#
0f#
0j#
0G$
0L$
0P$
0T$
0]$
1$&
0^$
1%&
0_$
0{$
1`$
1|$
1h%
1g%
0W%
0V%
0I%
0J%
0!&
0"&
0x$
0!%
0e%
0m%
0[%
0T%
0O%
0N%
1*&
1{%
1t$
0v$
0c%
0b%
0^%
0_%
0>%
0E%
0,&
1-&
0F&
1)'
0m&
1s&
1t&
1y&
1z&
1!'
1"'
1''
0('
0k&
0l&
1q&
1r&
1w&
1x&
1~&
1}&
1&'
1%'
1j&
1i&
1p&
1o&
1v&
1u&
0{&
0|&
0$'
1#'
0h&
0g&
1o'
1q'
1`'
1b'
17'
19'
1w'
0-&
0|$
1a$
1{$
0`$
0%&
0$&
0t$
0{%
0*&
0g%
0h%
1|$
0a$
0{$
0'&
0j%
1Y%
1L%
1(&
1n%
1G&
1P&
1Q&
1R&
1a&
1b&
1c&
1e&
1f&
1g&
1h&
0#'
1$'
1m&
0|$
1h%
0]'
0,'
0@'
0O'
1^'
1-'
1#'
0$'
1|&
1{&
1l&
1k&
1('
0G&
0c&
1d&
0e&
1'&
0f&
0h%
0|&
1$'
0P&
0Q&
0R&
0a&
1j%
0b&
1c&
0d&
0(&
0n%
1]%
1P%
1+&
1o%
1|&
0-'
1}$
0c&
0j%
1b&
0\'
0+'
0?'
0N'
1]'
1,'
0^'
1G#
1F#
1D#
1C#
1B#
13#
12#
11#
1(#
1(&
1j%
0b&
1^'
0m'
1n%
0+&
0o%
1`%
1Q%
1/&
0^'
0,'
1H
1G
1E
1D
1C
14
13
12
1)
0G#
0F#
1E#
0D#
0(#
1#%
0n%
0*'
0>'
0M'
1\'
1+'
0]'
0E#
1D#
0C#
0B#
03#
02#
01#
1+&
1n%
1]'
0l'
0H
0G
1F
0E
0)
1C#
0D#
1o%
0/&
0]'
0+'
0F
1E
0D
0C
04
03
02
0C#
1$%
0o%
1*'
0\'
0E
1D
1/&
1o%
1\'
0k'
0D
0\'
0*'
10&
1h!
1^!
#1000000
